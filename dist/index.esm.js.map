{"version":3,"file":"index.esm.js","sources":["../src/utilities/safe-assign.ts","../src/utilities/queue.ts","../src/utilities/map.ts","../src/utilities/parallel.ts","../src/utilities/settle.ts","../src/utilities/iterator.ts","../src/utilities/dowhilst.ts","../src/utilities/retry.ts","../src/utilities/series.ts","../src/utilities/index.ts","../src/index.ts"],"sourcesContent":["\r\nexport default function safeAssign(data: object): object {\r\n  let result = {};\r\n  for (let key in data) {\r\n    let descriptor = Object.getOwnPropertyDescriptor(data, key);\r\n    //@ts-ignore\r\n    if (descriptor && descriptor.writable) result[key] = data[key];\r\n  } \r\n  return result;\r\n}\r\n","\r\n const IS_PENDING = Symbol('isPending');\r\n const IS_FULFILLED = Symbol('isFulfulled');\r\n const IS_REJECTED = Symbol('isRejected');\r\n const IS_PAUSED = Symbol('isPaused');\r\n\r\n function fulfill(this: QueueNode, value: any, resolve: (value?: any) => void): void {\r\n  if (typeof this.timeout === 'number' && this.timeout > 0) {\r\n    const timeout = setTimeout(() => {\r\n      this.value = value;\r\n      resolve(value);\r\n      clearTimeout(timeout);\r\n    }, this.timeout);\r\n  } else { \r\n    this.value = value;\r\n    resolve(value);\r\n  }\r\n }\r\n\r\n function reject(this: QueueNode, e: any, reject: (value?: any) => void): void {\r\n  if (typeof this.timeout === 'number') {\r\n    const timeout = setTimeout(() => {\r\n      reject(e);\r\n      clearTimeout(timeout);\r\n    }, this.timeout);\r\n  } else { \r\n    reject(e);\r\n  }\r\n }\r\n\r\nexport interface QueueNodeOptions {\r\n  action: any;\r\n  timeout?: number;\r\n  index: number;\r\n  value: any;\r\n }\r\n\r\n export class QueueNode {\r\n  action: any;\r\n  timeout?: number;\r\n  index: number;\r\n  value: any;\r\n  fulfill: (this: QueueNode, value: any, resolve: (value?: any) => void) => void;\r\n  reject: (this: QueueNode, e: any, reject: (value?: any) => void) => void;\r\n  next?: QueueNode;\r\n  [IS_PENDING]: boolean;\r\n  [IS_FULFILLED]: boolean;\r\n  [IS_REJECTED]: boolean;\r\n\r\n  constructor(options: QueueNodeOptions) {\r\n    this.action = options.action;\r\n    this.timeout = options.timeout || 0;\r\n    this.index = options.index;\r\n    this.value = options.value;\r\n    this[IS_PENDING] = true;\r\n    this[IS_FULFILLED] = false;\r\n    this[IS_REJECTED] = false;\r\n    this.fulfill = fulfill.bind(this);\r\n    this.reject = reject.bind(this);\r\n    this.next = undefined;\r\n  }\r\n\r\n  resolve(value: any): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        const invoked = (typeof this.action === 'function')\r\n          ? this.action(value)\r\n          : this.action;\r\n        if (invoked && typeof invoked.then === 'function' && typeof invoked.catch === 'function') {\r\n          return invoked\r\n            .then((result: any) => this.fulfill(result, resolve))\r\n            .catch((e: any) => this.reject(e, reject));\r\n        } else {\r\n          this.fulfill(invoked, resolve);\r\n        }\r\n      } catch (e) {\r\n        this.reject(e, reject);\r\n      }\r\n    });\r\n  }\r\n }\r\n\r\nfunction decompress(data?: QueueNode): any {\r\n  let result = [];\r\n  let current = data;\r\n  while (current) {\r\n    result.push(current.value);\r\n    current = current.next;\r\n  }\r\n  return result;\r\n};\r\n\r\nfunction handleResolve(this: Queue, resolve: (value?: any) => void, reject: (value?: any) => void): void {\r\n  while (this.active < this.concurrency && this.current) {\r\n    this.active++;\r\n    let current = this.current;\r\n    this.current = current.next;\r\n    current.action = this.action;\r\n    current.resolve(current.value)\r\n      .then(result => {\r\n        if (--this.active === 0 && !this.current) resolve(this.decompress(this.root));\r\n        else this.resolve(resolve, reject);\r\n      }, e => {\r\n        this[IS_REJECTED] = true;\r\n        reject(e);\r\n      });\r\n  }\r\n};\r\n\r\nexport interface QueueOptions {\r\n  action: any;\r\n  concurrency?: number;\r\n  timeout?: number;\r\n  values?: any[];\r\n  decompress?: (data?: QueueNode) => any;\r\n}\r\n\r\n export default class Queue {\r\n  action: any;\r\n  concurrency: number;\r\n  timeout: number;\r\n  values: any[];\r\n  active: number;\r\n  current?: QueueNode;\r\n  [IS_PAUSED]: boolean;\r\n  [IS_REJECTED]: boolean;\r\n  root?: QueueNode;\r\n  length: number;\r\n  decompress: (data?: QueueNode) => void;\r\n\r\n  constructor(options: QueueOptions) {\r\n    this.action = options.action;\r\n    this.concurrency = options.concurrency || Infinity;\r\n    this.values = options.values || [];\r\n    this.active = 0;\r\n    this.timeout = options.timeout || 0;\r\n    this.current = undefined;\r\n    this[IS_PAUSED] = false;\r\n    this[IS_REJECTED] = false;\r\n    this.root = undefined;\r\n    this.length = 0;\r\n    this.decompress = (options.decompress || decompress).bind(this);\r\n  }\r\n\r\n  insert(...args: any[]): Queue {\r\n    for (let i = 0; i < args.length; i++) {\r\n      this.length++;\r\n      if (!this.root) {\r\n        this.root = new QueueNode({\r\n          index: i,\r\n          action: undefined,\r\n          value: args[i],\r\n          timeout: this.timeout,\r\n        });\r\n      } else {\r\n        let current = this.root;\r\n        while (current && current.next) {\r\n          current = current.next;\r\n        }\r\n        current.next = new QueueNode({\r\n          index: i,\r\n          action: undefined,\r\n          value: args[i],\r\n          timeout: this.timeout,\r\n        });\r\n      }\r\n    }\r\n    this.current = this.root;\r\n    return this;\r\n  }\r\n\r\n  resolve(resolve?: (value?: any) => void, reject?: (value?: any) => void): null | void | Promise<any> {\r\n    if (!this.current || this[IS_REJECTED] || this[IS_PAUSED]) {\r\n      return null;\r\n    }\r\n    if (resolve && reject) {\r\n      handleResolve.call(this, resolve, reject);\r\n    } else {\r\n      return new Promise((rs, rj) => {\r\n        handleResolve.call(this, rs, rj);\r\n      });\r\n    }\r\n  }\r\n }\r\n","\r\nimport Queue from './queue';\r\n\r\nexport default function map<T>(\r\n  operation: (arg: any) => any,\r\n  values: any[],\r\n  concurrency: any,\r\n  cb?: (...args: any[]) => void,\r\n) {\r\n  const callback = (typeof concurrency === 'function') ? concurrency : cb;\r\n  const conc = (typeof concurrency === 'number') ? concurrency : undefined;\r\n  const queue = new Queue({\r\n    action: operation,\r\n    concurrency: conc,\r\n  });\r\n  const p = queue.insert(...values).resolve() as Promise<Array<T>>\r\n  return p\r\n    .then(result => callback(null, result))\r\n    .catch(callback);\r\n};","import Queue, { QueueNode } from './queue';\r\nimport Promisie from '../';\r\n\r\ninterface ParallelOperation {\r\n  operation: any;\r\n  key: string;\r\n}\r\n\r\nexport default function parallel<T>(\r\n  fns: { [key: string]: T },\r\n  args: any,  \r\n  concurrency: any,\r\n  cb?: (...args: any[]) => void,\r\n) {\r\n  const callback = (typeof concurrency === 'function') ? concurrency : cb;\r\n  const conc = (typeof concurrency === 'number') ? concurrency : undefined;\r\n  const queue = new Queue({\r\n    action: (p: ParallelOperation): any => {\r\n      const { operation, key } = p;\r\n      if (typeof operation === 'function') {\r\n        if (Array.isArray(args)) {\r\n          const params = args as any[];\r\n          return Promise.all([operation(...params), key]);\r\n        }\r\n        return Promise.all([operation(args), key]);\r\n      }\r\n      return [operation, key];\r\n    },\r\n    concurrency: conc,\r\n    decompress: (data?: QueueNode): any => {\r\n      const result: { [key: string]: T } = {};\r\n      let current = data;\r\n      while (current) {\r\n        const [value, key] = current.value as any[];\r\n        result[key as string] = value;\r\n        current = current.next;\r\n      }\r\n      return result;\r\n    },\r\n  });\r\n  const p = queue\r\n    .insert(...Object.keys(fns).map(key => ({ operation: fns[key], key })))\r\n    .resolve() as Promise<{ [key: string]: T }>;\r\n\r\n  return p\r\n    .then(result => callback(null, result))\r\n    .catch(callback);\r\n}\r\n\r\nexport function handleRecursiveParallel<T>(fns: { [key: string]: any }): { [key: string]: any } {\r\n  return Object.keys(fns).reduce((result: { [key: string]: any }, key: string) => {\r\n    if (fns[key] && typeof fns[key] === 'object') {\r\n      result[key] = () => (\r\n        Promisie.parallel<T>(handleRecursiveParallel(fns[key]))\r\n      );\r\n    } else {\r\n      result[key] = fns[key];\r\n    }\r\n    return result;\r\n  }, {});\r\n}\r\n","import Queue, { QueueNode } from './queue';\r\n\r\nexport interface SettleValues<T = any> {\r\n  fulfilled: Fulfilled<T>[];\r\n  rejected: Rejected[];\r\n}\r\n\r\nexport interface Fulfilled<T = any> {\r\n  value: T;\r\n  status: 'fulfilled';\r\n}\r\n\r\nexport interface Rejected {\r\n  value: Error;\r\n  status: 'rejected';\r\n}\r\n\r\nexport default function settle<T = any>(\r\n  fns: any[],\r\n  concurrency: any,\r\n  cb?: (...args: any[]) => void,\r\n) {\r\n  const callback = (typeof concurrency === 'function') ? concurrency : cb;\r\n  const conc = (typeof concurrency === 'number') ? concurrency : undefined;\r\n  const fulfilled: Fulfilled<T>[] = [];\r\n  const rejected: Rejected[] = [];\r\n  const queue = new Queue({\r\n    action(operation: any): any {\r\n      if (typeof operation === 'function') {\r\n        try {\r\n          const invoked = operation();\r\n          if (invoked && typeof invoked.then === 'function' && typeof invoked.catch === 'function') {\r\n            return invoked\r\n              .then((result: any) => {\r\n                fulfilled.push({ value: result, status: 'fulfilled' });\r\n              }, (err: any) => {\r\n                rejected.push({ value: err, status: 'rejected' });\r\n              });\r\n          } else {\r\n            fulfilled.push({ value: invoked, status: 'fulfilled' });\r\n          }\r\n        } catch(e) {\r\n          rejected.push({ value: e, status: 'rejected' });\r\n        }\r\n      } else {\r\n        fulfilled.push({ value: operation, status: 'fulfilled' });\r\n      }\r\n      return null;\r\n    },\r\n    decompress(data?: QueueNode): any {\r\n      return null;\r\n    },\r\n    concurrency: conc,\r\n  });\r\n\r\n  const p = queue\r\n    .insert(...fns)\r\n    .resolve() as Promise<any>;\r\n  \r\n  return p\r\n    .then(() => callback(null, { fulfilled, rejected } as SettleValues))\r\n    .catch(callback);\r\n}","\r\nexport default function iterator(\r\n  generator: Generator,\r\n): (state: any, cb: (...args: any[]) => void) => void {\r\n  return function iterate (state: any, cb: (...args: any[]) => void): void {\r\n    let current;\r\n    try {\r\n      current = generator.next(state);\r\n    }\r\n    catch (e) {\r\n      cb(e);\r\n    }\r\n    if (!current) {\r\n      cb(new Error('ERROR: generator returned \\'undefined\\' value and is not iterable'));\r\n    }\r\n    const { done, value } = current || { done: true, value: null };\r\n    if (!done) {\r\n      if (value && typeof value.then === 'function' && typeof value.catch === 'function') {\r\n        value.then((next: any) => iterate(next, cb), cb);\r\n      } else {\r\n        let timeout = setTimeout(() => {\r\n          iterate(value, cb);\r\n          clearTimeout(timeout);\r\n        }, 0);\r\n      }\r\n    } else {\r\n      cb(null, value);\r\n    }\r\n  };\r\n}","\r\nexport default function makeDoWhilstGenerator<T>(\r\n  fn: () => any,\r\n  evaluate: (val: T) => boolean,\r\n): () => Generator {\r\n  let current: T;\r\n  return function* doWhilst(): Generator {\r\n    do {\r\n      const invoked = fn();\r\n      if (invoked && typeof invoked.then === 'function' && typeof invoked.catch === 'function') {\r\n        yield invoked\r\n          .then((result: T) => {\r\n            current = result;\r\n            return current;\r\n          }, (e: Error) => Promise.reject(e));\r\n      }\r\n      else {\r\n        current = invoked as T;\r\n        yield current;\r\n      }\r\n    }\r\n    while (evaluate(current));\r\n  };\r\n}","\r\nfunction timeout(time = 0): Promise<void> {\r\n  return new Promise(resolve => {\r\n    let _timeout = setTimeout(function () {\r\n      clearTimeout(_timeout);\r\n      resolve();\r\n    }, time);\r\n  });\r\n};\r\n\r\nexport default function makeRetryGenerator<T>(\r\n  fn: () => any,\r\n  options: { times: number, timeout?: number }\r\n): () => Generator {\r\n  let current: { __isRejected?: boolean, e: Error | null, value: T | null };\r\n  let isFirst = true;\r\n  let { times, timeout: to } = options;\r\n  return function* retry(): Generator {\r\n    do {\r\n      times--;\r\n      let invoked = (isFirst || typeof to !== 'number' || to === 0) ? fn() : (() => {\r\n        return timeout(to)\r\n          .then(fn)\r\n          .catch(e => Promise.reject(e));\r\n      })();\r\n      isFirst = false;\r\n      if (invoked && typeof invoked.then === 'function' && typeof invoked.catch === 'function') {\r\n        yield invoked\r\n          .then((result: T) => {\r\n            current = { __isRejected: false, e: null, value: result };\r\n            return current;\r\n          }, (e: Error) => {\r\n            current = { __isRejected: true, e, value: null };\r\n            return current;\r\n          });\r\n      }\r\n      else {\r\n        current = { __isRejected: false, e: null, value: invoked };\r\n        yield current;\r\n      }\r\n    }\r\n    while (\r\n      times\r\n      && (\r\n        current\r\n        && Object.hasOwnProperty.call(current, '__isRejected')\r\n      )\r\n    );\r\n    return current;\r\n  };\r\n};","\nfunction handleMap(arr: any[], state: any) {\n  return arr.map(operation => {\n    const clone = (typeof state === 'object')\n      ? ((Array.isArray(state))\n        ? Object.assign([], state)\n        : Object.assign({}, state))\n      : state;\n    if (typeof operation === 'function') return operation(clone);\n    else return operation;\n  });\n};\n\nexport default function makeSeriesGenerator<TOut = any>(\n  fns: Array<((state: any) => any) | any[]>,\n): () => Generator {\n  return function* series() {\n    let current;\n    let state: any;\n    while (fns.length) {\n      current = fns.shift();\n      if (Array.isArray(current)) {\n        const resolved = Promise.all(handleMap(current, state))\n          .then(result => (Array.isArray(state)) ? state.concat(result) : result)\n          .catch(e => Promise.reject(e));\n        state = yield resolved;\n      }\n      else if (current !== undefined) state = yield current(state);\n    }\n    return state as TOut;\n  };\n}","\r\nimport safeAssign from './safe-assign';\r\nimport map from './map';\r\nimport parallel, { handleRecursiveParallel } from './parallel';\r\nimport settle from './settle';\r\nimport iterator from './iterator';\r\nimport doWhilst from './dowhilst';\r\nimport retry from './retry';\r\nimport series from './series';\r\n\r\nexport default {\r\n  safeAssign,\r\n  map,\r\n  parallel,\r\n  handleRecursiveParallel,\r\n  settle,\r\n  iterator,\r\n  doWhilst,\r\n  retry,\r\n  series,\r\n}","import utilities from './utilities';\r\nimport { SettleValues } from './utilities/settle';\r\n\r\nexport interface PromisifyAllOptions {\r\n  recursive?: boolean;\r\n  readonly?: boolean;\r\n}\r\n\r\nexport interface ParallelOptions {\r\n  recursive?: boolean;\r\n  concurrency?: number;\r\n}\r\n\r\nexport interface RetryOptions {\r\n  times?: number;\r\n  timeout?: number;\r\n}\r\n\r\nexport interface PromisifyAllObjectParam {\r\n  [key: string]: ((...args: any[]) => void) | any\r\n}\r\n\r\nfunction isNestedPromisifyAllObjectParam(v: any): v is PromisifyAllObjectParam {\r\n  return v && typeof v === 'object';\r\n}\r\n\r\nexport interface PromisifyAllObjectResult {\r\n  [key: string]: (<T>(...args: any[]) => Promisie<T>) | any\r\n}\r\n\r\nfunction setHandlers(success: (arg: any) => any, failure: any) {\r\n  return {\r\n    success,\r\n    failure: (typeof failure === 'function') ? failure : undefined\r\n  };\r\n};\r\n\r\nexport default class Promisie<T = any> extends Promise<T> {\r\n  [key: string]: Function;\r\n\r\n  constructor(callback: (\r\n    resolve: (value?: T | PromiseLike<T>) => void,\r\n    reject: (value?: T | PromiseLike<T>) => void,\r\n  ) => void) {\r\n    super(callback);\r\n  }\r\n\r\n  then<TSuccess = T, TFailure = any>(\r\n    onfulfilled?: ((value: T) => any) | null | undefined,\r\n    onrejected?: ((reason: any) => TFailure | PromiseLike<TFailure>) | null | undefined,\r\n  ): Promisie<TSuccess> {\r\n    return super.then(onfulfilled, onrejected) as Promisie<TSuccess>\r\n  }\r\n\r\n  try<TSuccess = T, TFailure = any>(\r\n    onfulfilled?: ((value: T) => any) | null | undefined,\r\n    onrejected?: ((reason: any) => TFailure | PromiseLike<TFailure>) | null | undefined,\r\n  ): Promisie<TSuccess> {\r\n    const { success, failure } = setHandlers(function (data) {\r\n      try {\r\n        return (typeof onfulfilled === 'function')\r\n          ? onfulfilled(data)\r\n          : Promisie.reject(new TypeError('ERROR: try expects onSuccess handler to be a function'));\r\n      }\r\n      catch (e) {\r\n        return Promisie.reject(e);\r\n      }\r\n    }, onrejected);\r\n    return this.then(success, failure) as Promisie<TSuccess>;\r\n  }\r\n\r\n  spread<TSuccess = T, TFailure = any>(\r\n    onfulfilled?: ((...args: T[]) => any) | null | undefined,\r\n    onrejected?: ((reason: any) => TFailure | PromiseLike<TFailure>) | null | undefined,\r\n  ): Promisie<TSuccess> {\r\n    const { success, failure } = setHandlers(function (data) {\r\n      if (typeof data[Symbol.iterator] !== 'function') {\r\n        return Promisie.reject(new TypeError('ERROR: spread expects input to be iterable'));\r\n      }\r\n      if (typeof onfulfilled !== 'function') {\r\n        return Promisie.reject(new TypeError('ERROR: spread expects onSuccess handler to be a function'));\r\n      }\r\n      return onfulfilled(...data);\r\n    }, onrejected);\r\n    return this.then(success, failure) as Promisie<TSuccess>;\r\n  }\r\n\r\n  map<TSuccess = T, TFailure = any>(\r\n    onfulfilled?: ((datas: T) => any) | null | undefined,\r\n    onrejected?: ((reason: any) => TFailure | PromiseLike<TFailure>) | null | undefined | number,\r\n    concurrency?: number,\r\n  ): Promisie<TSuccess[]> {\r\n    if (typeof onrejected === 'number') {\r\n      concurrency = onrejected;\r\n      onrejected = undefined;\r\n    }\r\n    const { success, failure } = setHandlers(function (data) {\r\n      if (!Array.isArray(data)) {\r\n        return Promisie.reject(new TypeError('ERROR: map expects input to be an array'));\r\n      }\r\n      if (typeof onfulfilled !== 'function') {\r\n        return Promisie.reject(new TypeError('ERROR: map expects onSuccess handler to be a function'));\r\n      }\r\n      return Promisie.map<TSuccess>(data, concurrency, onfulfilled);\r\n    }, onrejected);\r\n    return this.then(success, failure) as Promisie<TSuccess[]>;\r\n  }\r\n\r\n  each<TSuccess = T, TFailure = any>(\r\n    onfulfilled?: ((datas: T) => any) | null | undefined,\r\n    onrejected?: ((reason: any) => TFailure | PromiseLike<TFailure>) | null | undefined | number,\r\n    concurrency?: number,\r\n  ): Promisie<TSuccess[]> {\r\n    if (typeof onrejected === 'number') {\r\n      concurrency = onrejected;\r\n      onrejected = undefined;\r\n    }\r\n    const { success, failure } = setHandlers(function (data) {\r\n      if (!Array.isArray(data)) {\r\n        return Promisie.reject(new TypeError('ERROR: each expects input to be an array'));\r\n      }\r\n      if (typeof onfulfilled !== 'function') {\r\n        return Promisie.reject(new TypeError('ERROR: each expects onSuccess handler to be a function'));\r\n      }\r\n      return Promisie.each<TSuccess>(data, concurrency, onfulfilled);\r\n    }, onrejected);\r\n    return this.then(success, failure) as Promisie<TSuccess[]>;\r\n  }\r\n\r\n  settle<TSuccess = T, TFailure = any>(\r\n    onfulfilled?: ((datas: T) => any) | null | undefined,\r\n    onrejected?: ((reason: any) => TFailure | PromiseLike<TFailure>) | null | undefined,\r\n  ): Promisie<SettleValues<TSuccess>> {\r\n    const { success, failure } = setHandlers(function (data) {\r\n      if (!Array.isArray(data)) {\r\n        return Promisie.reject(new TypeError('ERROR: settle expects input to be an array'));\r\n      }\r\n      if (typeof onfulfilled !== 'function') {\r\n        return Promisie.reject(new TypeError('ERROR: settle expects onSuccess handler to be a function'));\r\n      }\r\n      const operations = data.map(d => () => onfulfilled(d));\r\n      return Promisie.settle<TSuccess>(operations);\r\n    }, onrejected);\r\n    return this.then(success, failure) as Promisie<SettleValues<TSuccess>>;\r\n  }\r\n\r\n  retry<TSuccess = T, TFailure = any>(\r\n    onfulfilled?: ((args: T) => any) | null | undefined,\r\n    onrejected?: ((reason: any) => TFailure | PromiseLike<TFailure>) | null | undefined | RetryOptions,\r\n    options?: RetryOptions,\r\n  ): Promisie<TSuccess> {\r\n    if (onrejected && typeof onrejected === 'object') {\r\n      options = onrejected;\r\n      onrejected = undefined;\r\n    }\r\n    const { success, failure } = setHandlers(function (data) {\r\n      if (typeof onfulfilled !== 'function') return Promisie.reject(new TypeError('ERROR: retry expects onSuccess handler to be a function'));\r\n      return Promisie.retry<TSuccess>(() => {\r\n        return onfulfilled(data);\r\n      }, options);\r\n    }, onrejected);\r\n    return this.then(success, failure) as Promisie<TSuccess>;\r\n  }\r\n\r\n  finally<TSuccess = T>(onfulfilled?: (() => any) | null | undefined): Promisie<TSuccess> {\r\n    const _handler = () => (typeof onfulfilled === 'function')\r\n      ? onfulfilled()\r\n      : Promisie.reject(new TypeError('ERROR: finally expects handler to be a function'));\r\n    return this.then(_handler, _handler) as Promisie<TSuccess>;\r\n  }\r\n\r\n  static promisify(\r\n    fn: (...args: any[]) => void,\r\n    _this?: any\r\n  ): <T = any>(...args: any[]) => Promisie<T> {\r\n    const promisified = function<T>(this: any, ...args: any[]): Promisie<T> {\r\n      return new Promisie((resolve, reject) => {\r\n        args.push(function(err: any, data: any) {\r\n          if (err) {\r\n            reject(err);\r\n          } else {\r\n            resolve(data);\r\n          }\r\n        });\r\n        fn.apply(this, args);\r\n      });\r\n    }\r\n    if (_this) {\r\n      return promisified.bind(_this);\r\n    }\r\n    return promisified;\r\n  }\r\n\r\n  static promisifyAll(\r\n    mod: PromisifyAllObjectParam,\r\n    _this?: any,\r\n    options?: PromisifyAllOptions,\r\n  ): PromisifyAllObjectResult {\r\n    const withDefaultOptions = Object.assign({\r\n      readonly: true,\r\n      recursive: false,\r\n    }, options);\r\n    let input: PromisifyAllObjectParam = Object.create(mod);\r\n    if (!withDefaultOptions.readonly) {\r\n      input = Object.assign(input, mod) as PromisifyAllObjectParam;\r\n    } else {\r\n      input = utilities.safeAssign(mod) as PromisifyAllObjectParam;\r\n    }\r\n\r\n    const promisified: PromisifyAllObjectResult = {}; \r\n\r\n    Object.keys(input).forEach((key: string): void => {\r\n      if (typeof input[key] === 'function') {\r\n        promisified[`${key}Async`] = (_this)\r\n          ? this.promisify(input[key], _this)\r\n          : this.promisify(input[key]);\r\n      } else if (withDefaultOptions.recursive) {\r\n        const v = input[key];\r\n        if (isNestedPromisifyAllObjectParam(v)) {\r\n          promisified[key] = this.promisifyAll(\r\n            v,\r\n            _this,\r\n            withDefaultOptions,\r\n          );\r\n        }\r\n      }\r\n    });\r\n\r\n    return promisified;\r\n  }\r\n\r\n  static series<T = any>(fns: Array<((state: any) => any) | any[]>): Promisie<T> {\r\n    return Promisie.iterate<T>(utilities.series(fns), null);\r\n  }\r\n\r\n  static pipe<T = any>(fns: Array<(...args: any[]) => any>): (...args: any[]) => Promisie<T> {\r\n    return function(...args: any[]): Promisie<T> {\r\n      const operations = Object.assign([], fns) as Array<(...args: any[]) => any>;\r\n      const first = operations[0];\r\n      operations[0] = function(): any {\r\n        return first(...args);\r\n      }\r\n      return Promisie.series<T>(operations);\r\n    }\r\n  }\r\n\r\n  static compose<T = any>(fns: Array<(...args: any[]) => any>): (...args: any[]) => Promisie<T> {\r\n    return Promisie.pipe<T>(fns.reverse());\r\n  }\r\n\r\n  static map<T = any>(datas: any[], concurrency: any, fn?: (arg: any) => any): Promisie<Array<T>> {\r\n    const method = (typeof concurrency === 'function')\r\n      ? concurrency\r\n      : fn;\r\n    if (typeof concurrency !== 'number') {\r\n      concurrency = 1;\r\n    }\r\n    return Promisie.promisify(utilities.map)<Array<T>>(method, datas, concurrency);\r\n  }\r\n\r\n  static each<T = any>(datas: T[], concurrency: any, fn?: (arg: any) => any): Promisie<Array<T>> {\r\n    return Promisie\r\n      .map<T>(datas, concurrency, fn)\r\n      .then(() => datas) as Promisie<Array<T>>;\r\n  }\r\n\r\n  static parallel<T = any>(fns: { [key: string]: any }, args?: any, options: ParallelOptions = {}): Promisie<{ [key: string]: any }> {\r\n    const { recursive = false, concurrency } = options;\r\n    if (recursive) {\r\n      fns = utilities.handleRecursiveParallel<T>(fns);\r\n    }\r\n    return Promisie.promisify(utilities.parallel)<T>(fns, args, concurrency);\r\n  }\r\n\r\n  static settle<T = any>(fns: any[], concurrency?: number): Promisie<SettleValues> {\r\n    return Promisie.promisify(utilities.settle)<SettleValues<T>>(fns, concurrency);\r\n  }\r\n\r\n  static iterate<T = any>(generator: (arg?: any) => Generator, initial: any): Promisie<T> {\r\n    const iterator = utilities.iterator(generator(initial));\r\n    return Promisie.promisify(iterator)<T>(initial);\r\n  }\r\n\r\n  static doWhilst<T = any>(fn: () => T | Promise<T>, evaluate: (arg: T) => boolean): Promisie<T> {\r\n    return Promisie.iterate<T>(utilities.doWhilst<T>(fn, evaluate), null);\r\n  }\r\n\r\n  static sleep(timeout: number): Promisie<void> {\r\n    return new Promisie((resolve) => {\r\n      setTimeout(() => {\r\n        resolve();\r\n      }, timeout);\r\n    });\r\n  }\r\n\r\n  static retry<T = any>(fn: () => T | Promise<T>, options?: RetryOptions): Promisie<T | void> {\r\n    const { times = 3, timeout = 0 } = options || {};\r\n    return Promisie.iterate(utilities.retry<T>(fn, { times, timeout }), null)\r\n      .then(result => {\r\n        const { __isRejected, e, value } = result as { __isRejected?: boolean, e: Error | null, value: T | null };\r\n        if (__isRejected) {\r\n          return Promisie.reject(e);\r\n        }\r\n        return Promisie.resolve(value);\r\n      });\r\n  }\r\n}\r\n"],"names":["doWhilst","retry","series"],"mappings":"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"}