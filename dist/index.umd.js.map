{"version":3,"file":"index.umd.js","sources":["../src/utilities/safe-assign.ts","../src/utilities/queue.ts","../src/utilities/map.ts","../src/utilities/parallel.ts","../src/utilities/settle.ts","../src/utilities/iterator.ts","../src/utilities/dowhilst.ts","../src/utilities/retry.ts","../src/utilities/series.ts","../src/utilities/index.ts","../src/index.ts"],"sourcesContent":["\r\nexport default function safeAssign(data: object): object {\r\n  let result = {};\r\n  for (let key in data) {\r\n    let descriptor = Object.getOwnPropertyDescriptor(data, key);\r\n    //@ts-ignore\r\n    if (descriptor && descriptor.writable) result[key] = data[key];\r\n  } \r\n  return result;\r\n}\r\n","\r\n const IS_PENDING = Symbol('isPending');\r\n const IS_FULFILLED = Symbol('isFulfulled');\r\n const IS_REJECTED = Symbol('isRejected');\r\n const IS_PAUSED = Symbol('isPaused');\r\n\r\n function fulfill(this: QueueNode, value: any, resolve: (value?: any) => void): void {\r\n  if (typeof this.timeout === 'number' && this.timeout > 0) {\r\n    const timeout = setTimeout(() => {\r\n      this.value = value;\r\n      resolve(value);\r\n      clearTimeout(timeout);\r\n    }, this.timeout);\r\n  } else { \r\n    this.value = value;\r\n    resolve(value);\r\n  }\r\n }\r\n\r\n function reject(this: QueueNode, e: any, reject: (value?: any) => void): void {\r\n  if (typeof this.timeout === 'number') {\r\n    const timeout = setTimeout(() => {\r\n      reject(e);\r\n      clearTimeout(timeout);\r\n    }, this.timeout);\r\n  } else { \r\n    reject(e);\r\n  }\r\n }\r\n\r\nexport interface QueueNodeOptions {\r\n  action: any;\r\n  timeout?: number;\r\n  index: number;\r\n  value: any;\r\n }\r\n\r\n export class QueueNode {\r\n  action: any;\r\n  timeout?: number;\r\n  index: number;\r\n  value: any;\r\n  fulfill: (this: QueueNode, value: any, resolve: (value?: any) => void) => void;\r\n  reject: (this: QueueNode, e: any, reject: (value?: any) => void) => void;\r\n  next?: QueueNode;\r\n  [IS_PENDING]: boolean;\r\n  [IS_FULFILLED]: boolean;\r\n  [IS_REJECTED]: boolean;\r\n\r\n  constructor(options: QueueNodeOptions) {\r\n    this.action = options.action;\r\n    this.timeout = options.timeout || 0;\r\n    this.index = options.index;\r\n    this.value = options.value;\r\n    this[IS_PENDING] = true;\r\n    this[IS_FULFILLED] = false;\r\n    this[IS_REJECTED] = false;\r\n    this.fulfill = fulfill.bind(this);\r\n    this.reject = reject.bind(this);\r\n    this.next = undefined;\r\n  }\r\n\r\n  resolve(value: any): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        const invoked = (typeof this.action === 'function')\r\n          ? this.action(value)\r\n          : this.action;\r\n        if (invoked && typeof invoked.then === 'function' && typeof invoked.catch === 'function') {\r\n          return invoked\r\n            .then((result: any) => this.fulfill(result, resolve))\r\n            .catch((e: any) => this.reject(e, reject));\r\n        } else {\r\n          this.fulfill(invoked, resolve);\r\n        }\r\n      } catch (e) {\r\n        this.reject(e, reject);\r\n      }\r\n    });\r\n  }\r\n }\r\n\r\nfunction decompress(data?: QueueNode): any {\r\n  let result = [];\r\n  let current = data;\r\n  while (current) {\r\n    result.push(current.value);\r\n    current = current.next;\r\n  }\r\n  return result;\r\n};\r\n\r\nfunction handleResolve(this: Queue, resolve: (value?: any) => void, reject: (value?: any) => void): void {\r\n  while (this.active < this.concurrency && this.current) {\r\n    this.active++;\r\n    let current = this.current;\r\n    this.current = current.next;\r\n    current.action = this.action;\r\n    current.resolve(current.value)\r\n      .then(result => {\r\n        if (--this.active === 0 && !this.current) resolve(this.decompress(this.root));\r\n        else this.resolve(resolve, reject);\r\n      }, e => {\r\n        this[IS_REJECTED] = true;\r\n        reject(e);\r\n      });\r\n  }\r\n};\r\n\r\nexport interface QueueOptions {\r\n  action: any;\r\n  concurrency?: number;\r\n  timeout?: number;\r\n  values?: any[];\r\n  decompress?: (data?: QueueNode) => any;\r\n}\r\n\r\n export default class Queue {\r\n  action: any;\r\n  concurrency: number;\r\n  timeout: number;\r\n  values: any[];\r\n  active: number;\r\n  current?: QueueNode;\r\n  [IS_PAUSED]: boolean;\r\n  [IS_REJECTED]: boolean;\r\n  root?: QueueNode;\r\n  length: number;\r\n  decompress: (data?: QueueNode) => void;\r\n\r\n  constructor(options: QueueOptions) {\r\n    this.action = options.action;\r\n    this.concurrency = options.concurrency || Infinity;\r\n    this.values = options.values || [];\r\n    this.active = 0;\r\n    this.timeout = options.timeout || 0;\r\n    this.current = undefined;\r\n    this[IS_PAUSED] = false;\r\n    this[IS_REJECTED] = false;\r\n    this.root = undefined;\r\n    this.length = 0;\r\n    this.decompress = (options.decompress || decompress).bind(this);\r\n  }\r\n\r\n  insert(...args: any[]): Queue {\r\n    for (let i = 0; i < args.length; i++) {\r\n      this.length++;\r\n      if (!this.root) {\r\n        this.root = new QueueNode({\r\n          index: i,\r\n          action: undefined,\r\n          value: args[i],\r\n          timeout: this.timeout,\r\n        });\r\n      } else {\r\n        let current = this.root;\r\n        while (current && current.next) {\r\n          current = current.next;\r\n        }\r\n        current.next = new QueueNode({\r\n          index: i,\r\n          action: undefined,\r\n          value: args[i],\r\n          timeout: this.timeout,\r\n        });\r\n      }\r\n    }\r\n    this.current = this.root;\r\n    return this;\r\n  }\r\n\r\n  resolve(resolve?: (value?: any) => void, reject?: (value?: any) => void): null | void | Promise<any> {\r\n    if (!this.current || this[IS_REJECTED] || this[IS_PAUSED]) {\r\n      return null;\r\n    }\r\n    if (resolve && reject) {\r\n      handleResolve.call(this, resolve, reject);\r\n    } else {\r\n      return new Promise((rs, rj) => {\r\n        handleResolve.call(this, rs, rj);\r\n      });\r\n    }\r\n  }\r\n }\r\n","\r\nimport Queue from './queue';\r\n\r\nexport default function map<T>(\r\n  operation: (arg: any) => any,\r\n  values: any[],\r\n  concurrency: any,\r\n  cb?: (...args: any[]) => void,\r\n) {\r\n  const callback = (typeof concurrency === 'function') ? concurrency : cb;\r\n  const conc = (typeof concurrency === 'number') ? concurrency : undefined;\r\n  const queue = new Queue({\r\n    action: operation,\r\n    concurrency: conc,\r\n  });\r\n  const p = queue.insert(...values).resolve() as Promise<Array<T>>\r\n  return p\r\n    .then(result => callback(null, result))\r\n    .catch(callback);\r\n};","import Queue, { QueueNode } from './queue';\r\nimport Promisie from '../';\r\n\r\ninterface ParallelOperation {\r\n  operation: any;\r\n  key: string;\r\n}\r\n\r\nexport default function parallel<T>(\r\n  fns: { [key: string]: T },\r\n  args: any,  \r\n  concurrency: any,\r\n  cb?: (...args: any[]) => void,\r\n) {\r\n  const callback = (typeof concurrency === 'function') ? concurrency : cb;\r\n  const conc = (typeof concurrency === 'number') ? concurrency : undefined;\r\n  const queue = new Queue({\r\n    action: (p: ParallelOperation): any => {\r\n      const { operation, key } = p;\r\n      if (typeof operation === 'function') {\r\n        if (Array.isArray(args)) {\r\n          const params = args as any[];\r\n          return Promise.all([operation(...params), key]);\r\n        }\r\n        return Promise.all([operation(args), key]);\r\n      }\r\n      return [operation, key];\r\n    },\r\n    concurrency: conc,\r\n    decompress: (data?: QueueNode): any => {\r\n      const result: { [key: string]: T } = {};\r\n      let current = data;\r\n      while (current) {\r\n        const [value, key] = current.value as any[];\r\n        result[key as string] = value;\r\n        current = current.next;\r\n      }\r\n      return result;\r\n    },\r\n  });\r\n  const p = queue\r\n    .insert(...Object.keys(fns).map(key => ({ operation: fns[key], key })))\r\n    .resolve() as Promise<{ [key: string]: T }>;\r\n\r\n  return p\r\n    .then(result => callback(null, result))\r\n    .catch(callback);\r\n}\r\n\r\nexport function handleRecursiveParallel<T>(fns: { [key: string]: any }): { [key: string]: any } {\r\n  return Object.keys(fns).reduce((result: { [key: string]: any }, key: string) => {\r\n    if (fns[key] && typeof fns[key] === 'object') {\r\n      result[key] = () => (\r\n        Promisie.parallel<T>(handleRecursiveParallel(fns[key]))\r\n      );\r\n    } else {\r\n      result[key] = fns[key];\r\n    }\r\n    return result;\r\n  }, {});\r\n}\r\n","import Queue, { QueueNode } from './queue';\r\n\r\nexport interface SettleValues<T = any> {\r\n  fulfilled: Fulfilled<T>[];\r\n  rejected: Rejected[];\r\n}\r\n\r\nexport interface Fulfilled<T = any> {\r\n  value: T;\r\n  status: 'fulfilled';\r\n}\r\n\r\nexport interface Rejected {\r\n  value: Error;\r\n  status: 'rejected';\r\n}\r\n\r\nexport default function settle<T = any>(\r\n  fns: any[],\r\n  concurrency: any,\r\n  cb?: (...args: any[]) => void,\r\n) {\r\n  const callback = (typeof concurrency === 'function') ? concurrency : cb;\r\n  const conc = (typeof concurrency === 'number') ? concurrency : undefined;\r\n  const fulfilled: Fulfilled<T>[] = [];\r\n  const rejected: Rejected[] = [];\r\n  const queue = new Queue({\r\n    action(operation: any): any {\r\n      if (typeof operation === 'function') {\r\n        try {\r\n          const invoked = operation();\r\n          if (invoked && typeof invoked.then === 'function' && typeof invoked.catch === 'function') {\r\n            return invoked\r\n              .then((result: any) => {\r\n                fulfilled.push({ value: result, status: 'fulfilled' });\r\n              }, (err: any) => {\r\n                rejected.push({ value: err, status: 'rejected' });\r\n              });\r\n          } else {\r\n            fulfilled.push({ value: invoked, status: 'fulfilled' });\r\n          }\r\n        } catch(e) {\r\n          rejected.push({ value: e, status: 'rejected' });\r\n        }\r\n      } else {\r\n        fulfilled.push({ value: operation, status: 'fulfilled' });\r\n      }\r\n      return null;\r\n    },\r\n    decompress(data?: QueueNode): any {\r\n      return null;\r\n    },\r\n    concurrency: conc,\r\n  });\r\n\r\n  const p = queue\r\n    .insert(...fns)\r\n    .resolve() as Promise<any>;\r\n  \r\n  return p\r\n    .then(() => callback(null, { fulfilled, rejected } as SettleValues))\r\n    .catch(callback);\r\n}","\r\nexport default function iterator(\r\n  generator: Generator,\r\n): (state: any, cb: (...args: any[]) => void) => void {\r\n  return function iterate (state: any, cb: (...args: any[]) => void): void {\r\n    let current;\r\n    try {\r\n      current = generator.next(state);\r\n    }\r\n    catch (e) {\r\n      cb(e);\r\n    }\r\n    if (!current) {\r\n      cb(new Error('ERROR: generator returned \\'undefined\\' value and is not iterable'));\r\n    }\r\n    const { done, value } = current || { done: true, value: null };\r\n    if (!done) {\r\n      if (value && typeof value.then === 'function' && typeof value.catch === 'function') {\r\n        value.then((next: any) => iterate(next, cb), cb);\r\n      } else {\r\n        let timeout = setTimeout(() => {\r\n          iterate(value, cb);\r\n          clearTimeout(timeout);\r\n        }, 0);\r\n      }\r\n    } else {\r\n      cb(null, value);\r\n    }\r\n  };\r\n}","\r\nexport default function makeDoWhilstGenerator<T>(\r\n  fn: () => any,\r\n  evaluate: (val: T) => boolean,\r\n): () => Generator {\r\n  let current: T;\r\n  return function* doWhilst(): Generator {\r\n    do {\r\n      const invoked = fn();\r\n      if (invoked && typeof invoked.then === 'function' && typeof invoked.catch === 'function') {\r\n        yield invoked\r\n          .then((result: T) => {\r\n            current = result;\r\n            return current;\r\n          }, (e: Error) => Promise.reject(e));\r\n      }\r\n      else {\r\n        current = invoked as T;\r\n        yield current;\r\n      }\r\n    }\r\n    while (evaluate(current));\r\n  };\r\n}","\r\nfunction timeout(time = 0): Promise<void> {\r\n  return new Promise(resolve => {\r\n    let _timeout = setTimeout(function () {\r\n      clearTimeout(_timeout);\r\n      resolve();\r\n    }, time);\r\n  });\r\n};\r\n\r\nexport default function makeRetryGenerator<T>(\r\n  fn: () => any,\r\n  options: { times: number, timeout?: number }\r\n): () => Generator {\r\n  let current: { __isRejected?: boolean, e: Error | null, value: T | null };\r\n  let isFirst = true;\r\n  let { times, timeout: to } = options;\r\n  return function* retry(): Generator {\r\n    do {\r\n      times--;\r\n      let invoked = (isFirst || typeof to !== 'number' || to === 0) ? fn() : (() => {\r\n        return timeout(to)\r\n          .then(fn)\r\n          .catch(e => Promise.reject(e));\r\n      })();\r\n      isFirst = false;\r\n      if (invoked && typeof invoked.then === 'function' && typeof invoked.catch === 'function') {\r\n        yield invoked\r\n          .then((result: T) => {\r\n            current = { __isRejected: false, e: null, value: result };\r\n            return current;\r\n          }, (e: Error) => {\r\n            current = { __isRejected: true, e, value: null };\r\n            return current;\r\n          });\r\n      }\r\n      else {\r\n        current = { __isRejected: false, e: null, value: invoked };\r\n        yield current;\r\n      }\r\n    }\r\n    while (\r\n      times\r\n      && (\r\n        current\r\n        && Object.hasOwnProperty.call(current, '__isRejected')\r\n      )\r\n    );\r\n    return current;\r\n  };\r\n};","\nfunction handleMap(arr: any[], state: any) {\n  return arr.map(operation => {\n    const clone = (typeof state === 'object')\n      ? ((Array.isArray(state))\n        ? Object.assign([], state)\n        : Object.assign({}, state))\n      : state;\n    if (typeof operation === 'function') return operation(clone);\n    else return operation;\n  });\n};\n\nexport default function makeSeriesGenerator<TOut = any>(\n  fns: Array<((state: any) => any) | any[]>,\n): () => Generator {\n  return function* series() {\n    let current;\n    let state: any;\n    while (fns.length) {\n      current = fns.shift();\n      if (Array.isArray(current)) {\n        const resolved = Promise.all(handleMap(current, state))\n          .then(result => (Array.isArray(state)) ? state.concat(result) : result)\n          .catch(e => Promise.reject(e));\n        state = yield resolved;\n      }\n      else if (current !== undefined) state = yield current(state);\n    }\n    return state as TOut;\n  };\n}","\r\nimport safeAssign from './safe-assign';\r\nimport map from './map';\r\nimport parallel, { handleRecursiveParallel } from './parallel';\r\nimport settle from './settle';\r\nimport iterator from './iterator';\r\nimport doWhilst from './dowhilst';\r\nimport retry from './retry';\r\nimport series from './series';\r\n\r\nexport default {\r\n  safeAssign,\r\n  map,\r\n  parallel,\r\n  handleRecursiveParallel,\r\n  settle,\r\n  iterator,\r\n  doWhilst,\r\n  retry,\r\n  series,\r\n}","import utilities from './utilities';\r\nimport { SettleValues } from './utilities/settle';\r\n\r\nexport interface PromisifyAllOptions {\r\n  recursive?: boolean;\r\n  readonly?: boolean;\r\n}\r\n\r\nexport interface ParallelOptions {\r\n  recursive?: boolean;\r\n  concurrency?: number;\r\n}\r\n\r\nexport interface RetryOptions {\r\n  times?: number;\r\n  timeout?: number;\r\n}\r\n\r\nexport interface PromisifyAllObjectParam {\r\n  [key: string]: ((...args: any[]) => void) | any\r\n}\r\n\r\nfunction isNestedPromisifyAllObjectParam(v: any): v is PromisifyAllObjectParam {\r\n  return v && typeof v === 'object';\r\n}\r\n\r\nexport interface PromisifyAllObjectResult {\r\n  [key: string]: (<T>(...args: any[]) => Promisie<T>) | any\r\n}\r\n\r\nfunction setHandlers(success: (arg: any) => any, failure: any) {\r\n  return {\r\n    success,\r\n    failure: (typeof failure === 'function') ? failure : undefined\r\n  };\r\n};\r\n\r\nexport default class Promisie<T = any> extends Promise<T> {\r\n  [key: string]: Function;\r\n\r\n  constructor(callback: (\r\n    resolve: (value?: T | PromiseLike<T>) => void,\r\n    reject: (value?: T | PromiseLike<T>) => void,\r\n  ) => void) {\r\n    super(callback);\r\n  }\r\n\r\n  then<TSuccess = T, TFailure = any>(\r\n    onfulfilled?: ((value: T) => any) | null | undefined,\r\n    onrejected?: ((reason: any) => TFailure | PromiseLike<TFailure>) | null | undefined,\r\n  ): Promisie<TSuccess> {\r\n    return super.then(onfulfilled, onrejected) as Promisie<TSuccess>\r\n  }\r\n\r\n  try<TSuccess = T, TFailure = any>(\r\n    onfulfilled?: ((value: T) => any) | null | undefined,\r\n    onrejected?: ((reason: any) => TFailure | PromiseLike<TFailure>) | null | undefined,\r\n  ): Promisie<TSuccess> {\r\n    const { success, failure } = setHandlers(function (data) {\r\n      try {\r\n        return (typeof onfulfilled === 'function')\r\n          ? onfulfilled(data)\r\n          : Promisie.reject(new TypeError('ERROR: try expects onSuccess handler to be a function'));\r\n      }\r\n      catch (e) {\r\n        return Promisie.reject(e);\r\n      }\r\n    }, onrejected);\r\n    return this.then(success, failure) as Promisie<TSuccess>;\r\n  }\r\n\r\n  spread<TSuccess = T, TFailure = any>(\r\n    onfulfilled?: ((...args: T[]) => any) | null | undefined,\r\n    onrejected?: ((reason: any) => TFailure | PromiseLike<TFailure>) | null | undefined,\r\n  ): Promisie<TSuccess> {\r\n    const { success, failure } = setHandlers(function (data) {\r\n      if (typeof data[Symbol.iterator] !== 'function') {\r\n        return Promisie.reject(new TypeError('ERROR: spread expects input to be iterable'));\r\n      }\r\n      if (typeof onfulfilled !== 'function') {\r\n        return Promisie.reject(new TypeError('ERROR: spread expects onSuccess handler to be a function'));\r\n      }\r\n      return onfulfilled(...data);\r\n    }, onrejected);\r\n    return this.then(success, failure) as Promisie<TSuccess>;\r\n  }\r\n\r\n  map<TSuccess = T, TFailure = any>(\r\n    onfulfilled?: ((datas: T) => any) | null | undefined,\r\n    onrejected?: ((reason: any) => TFailure | PromiseLike<TFailure>) | null | undefined | number,\r\n    concurrency?: number,\r\n  ): Promisie<TSuccess[]> {\r\n    if (typeof onrejected === 'number') {\r\n      concurrency = onrejected;\r\n      onrejected = undefined;\r\n    }\r\n    const { success, failure } = setHandlers(function (data) {\r\n      if (!Array.isArray(data)) {\r\n        return Promisie.reject(new TypeError('ERROR: map expects input to be an array'));\r\n      }\r\n      if (typeof onfulfilled !== 'function') {\r\n        return Promisie.reject(new TypeError('ERROR: map expects onSuccess handler to be a function'));\r\n      }\r\n      return Promisie.map<TSuccess>(data, concurrency, onfulfilled);\r\n    }, onrejected);\r\n    return this.then(success, failure) as Promisie<TSuccess[]>;\r\n  }\r\n\r\n  each<TSuccess = T, TFailure = any>(\r\n    onfulfilled?: ((datas: T) => any) | null | undefined,\r\n    onrejected?: ((reason: any) => TFailure | PromiseLike<TFailure>) | null | undefined | number,\r\n    concurrency?: number,\r\n  ): Promisie<TSuccess[]> {\r\n    if (typeof onrejected === 'number') {\r\n      concurrency = onrejected;\r\n      onrejected = undefined;\r\n    }\r\n    const { success, failure } = setHandlers(function (data) {\r\n      if (!Array.isArray(data)) {\r\n        return Promisie.reject(new TypeError('ERROR: each expects input to be an array'));\r\n      }\r\n      if (typeof onfulfilled !== 'function') {\r\n        return Promisie.reject(new TypeError('ERROR: each expects onSuccess handler to be a function'));\r\n      }\r\n      return Promisie.each<TSuccess>(data, concurrency, onfulfilled);\r\n    }, onrejected);\r\n    return this.then(success, failure) as Promisie<TSuccess[]>;\r\n  }\r\n\r\n  settle<TSuccess = T, TFailure = any>(\r\n    onfulfilled?: ((datas: T) => any) | null | undefined,\r\n    onrejected?: ((reason: any) => TFailure | PromiseLike<TFailure>) | null | undefined,\r\n  ): Promisie<SettleValues<TSuccess>> {\r\n    const { success, failure } = setHandlers(function (data) {\r\n      if (!Array.isArray(data)) {\r\n        return Promisie.reject(new TypeError('ERROR: settle expects input to be an array'));\r\n      }\r\n      if (typeof onfulfilled !== 'function') {\r\n        return Promisie.reject(new TypeError('ERROR: settle expects onSuccess handler to be a function'));\r\n      }\r\n      const operations = data.map(d => () => onfulfilled(d));\r\n      return Promisie.settle<TSuccess>(operations);\r\n    }, onrejected);\r\n    return this.then(success, failure) as Promisie<SettleValues<TSuccess>>;\r\n  }\r\n\r\n  retry<TSuccess = T, TFailure = any>(\r\n    onfulfilled?: ((args: T) => any) | null | undefined,\r\n    onrejected?: ((reason: any) => TFailure | PromiseLike<TFailure>) | null | undefined | RetryOptions,\r\n    options?: RetryOptions,\r\n  ): Promisie<TSuccess> {\r\n    if (onrejected && typeof onrejected === 'object') {\r\n      options = onrejected;\r\n      onrejected = undefined;\r\n    }\r\n    const { success, failure } = setHandlers(function (data) {\r\n      if (typeof onfulfilled !== 'function') return Promisie.reject(new TypeError('ERROR: retry expects onSuccess handler to be a function'));\r\n      return Promisie.retry<TSuccess>(() => {\r\n        return onfulfilled(data);\r\n      }, options);\r\n    }, onrejected);\r\n    return this.then(success, failure) as Promisie<TSuccess>;\r\n  }\r\n\r\n  finally<TSuccess = T>(onfulfilled?: (() => any) | null | undefined): Promisie<TSuccess> {\r\n    const _handler = () => (typeof onfulfilled === 'function')\r\n      ? onfulfilled()\r\n      : Promisie.reject(new TypeError('ERROR: finally expects handler to be a function'));\r\n    return this.then(_handler, _handler) as Promisie<TSuccess>;\r\n  }\r\n\r\n  static promisify(\r\n    fn: (...args: any[]) => void,\r\n    _this?: any\r\n  ): <T = any>(...args: any[]) => Promisie<T> {\r\n    const promisified = function<T>(this: any, ...args: any[]): Promisie<T> {\r\n      return new Promisie((resolve, reject) => {\r\n        args.push(function(err: any, data: any) {\r\n          if (err) {\r\n            reject(err);\r\n          } else {\r\n            resolve(data);\r\n          }\r\n        });\r\n        fn.apply(this, args);\r\n      });\r\n    }\r\n    if (_this) {\r\n      return promisified.bind(_this);\r\n    }\r\n    return promisified;\r\n  }\r\n\r\n  static promisifyAll(\r\n    mod: PromisifyAllObjectParam,\r\n    _this?: any,\r\n    options?: PromisifyAllOptions,\r\n  ): PromisifyAllObjectResult {\r\n    const withDefaultOptions = Object.assign({\r\n      readonly: true,\r\n      recursive: false,\r\n    }, options);\r\n    let input: PromisifyAllObjectParam = Object.create(mod);\r\n    if (!withDefaultOptions.readonly) {\r\n      input = Object.assign(input, mod) as PromisifyAllObjectParam;\r\n    } else {\r\n      input = utilities.safeAssign(mod) as PromisifyAllObjectParam;\r\n    }\r\n\r\n    const promisified: PromisifyAllObjectResult = {}; \r\n\r\n    Object.keys(input).forEach((key: string): void => {\r\n      if (typeof input[key] === 'function') {\r\n        promisified[`${key}Async`] = (_this)\r\n          ? this.promisify(input[key], _this)\r\n          : this.promisify(input[key]);\r\n      } else if (withDefaultOptions.recursive) {\r\n        const v = input[key];\r\n        if (isNestedPromisifyAllObjectParam(v)) {\r\n          promisified[key] = this.promisifyAll(\r\n            v,\r\n            _this,\r\n            withDefaultOptions,\r\n          );\r\n        }\r\n      }\r\n    });\r\n\r\n    return promisified;\r\n  }\r\n\r\n  static series<T = any>(fns: Array<((state: any) => any) | any[]>): Promisie<T> {\r\n    return Promisie.iterate<T>(utilities.series(fns), null);\r\n  }\r\n\r\n  static pipe<T = any>(fns: Array<(...args: any[]) => any>): (...args: any[]) => Promisie<T> {\r\n    return function(...args: any[]): Promisie<T> {\r\n      const operations = Object.assign([], fns) as Array<(...args: any[]) => any>;\r\n      const first = operations[0];\r\n      operations[0] = function(): any {\r\n        return first(...args);\r\n      }\r\n      return Promisie.series<T>(operations);\r\n    }\r\n  }\r\n\r\n  static compose<T = any>(fns: Array<(...args: any[]) => any>): (...args: any[]) => Promisie<T> {\r\n    return Promisie.pipe<T>(fns.reverse());\r\n  }\r\n\r\n  static map<T = any>(datas: any[], concurrency: any, fn?: (arg: any) => any): Promisie<Array<T>> {\r\n    const method = (typeof concurrency === 'function')\r\n      ? concurrency\r\n      : fn;\r\n    if (typeof concurrency !== 'number') {\r\n      concurrency = 1;\r\n    }\r\n    return Promisie.promisify(utilities.map)<Array<T>>(method, datas, concurrency);\r\n  }\r\n\r\n  static each<T = any>(datas: T[], concurrency: any, fn?: (arg: any) => any): Promisie<Array<T>> {\r\n    return Promisie\r\n      .map<T>(datas, concurrency, fn)\r\n      .then(() => datas) as Promisie<Array<T>>;\r\n  }\r\n\r\n  static parallel<T = any>(fns: { [key: string]: any }, args?: any, options: ParallelOptions = {}): Promisie<{ [key: string]: any }> {\r\n    const { recursive = false, concurrency } = options;\r\n    if (recursive) {\r\n      fns = utilities.handleRecursiveParallel<T>(fns);\r\n    }\r\n    return Promisie.promisify(utilities.parallel)<T>(fns, args, concurrency);\r\n  }\r\n\r\n  static settle<T = any>(fns: any[], concurrency?: number): Promisie<SettleValues> {\r\n    return Promisie.promisify(utilities.settle)<SettleValues<T>>(fns, concurrency);\r\n  }\r\n\r\n  static iterate<T = any>(generator: (arg?: any) => Generator, initial: any): Promisie<T> {\r\n    const iterator = utilities.iterator(generator(initial));\r\n    return Promisie.promisify(iterator)<T>(initial);\r\n  }\r\n\r\n  static doWhilst<T = any>(fn: () => T | Promise<T>, evaluate: (arg: T) => boolean): Promisie<T> {\r\n    return Promisie.iterate<T>(utilities.doWhilst<T>(fn, evaluate), null);\r\n  }\r\n\r\n  static sleep(timeout: number): Promisie<void> {\r\n    return new Promisie((resolve) => {\r\n      setTimeout(() => {\r\n        resolve();\r\n      }, timeout);\r\n    });\r\n  }\r\n\r\n  static retry<T = any>(fn: () => T | Promise<T>, options?: RetryOptions): Promisie<T | void> {\r\n    const { times = 3, timeout = 0 } = options || {};\r\n    return Promisie.iterate(utilities.retry<T>(fn, { times, timeout }), null)\r\n      .then(result => {\r\n        const { __isRejected, e, value } = result as { __isRejected?: boolean, e: Error | null, value: T | null };\r\n        if (__isRejected) {\r\n          return Promisie.reject(e);\r\n        }\r\n        return Promisie.resolve(value);\r\n      });\r\n  }\r\n}\r\n"],"names":["doWhilst","retry","series"],"mappings":";;;;;;WACwB,UAAU,CAAC,IAAY;MAC7C,IAAI,MAAM,GAAG,EAAE,CAAC;MAChB,KAAK,IAAI,GAAG,IAAI,IAAI,EAAE;UACpB,IAAI,UAAU,GAAG,MAAM,CAAC,wBAAwB,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;;UAE5D,IAAI,UAAU,IAAI,UAAU,CAAC,QAAQ;cAAE,MAAM,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;OAChE;MACD,OAAO,MAAM,CAAC;EAChB;;ECRC,MAAM,UAAU,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC;EACvC,MAAM,YAAY,GAAG,MAAM,CAAC,aAAa,CAAC,CAAC;EAC3C,MAAM,WAAW,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC;EACzC,MAAM,SAAS,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;EAErC,SAAS,OAAO,CAAkB,KAAU,EAAE,OAA8B;MAC3E,IAAI,OAAO,IAAI,CAAC,OAAO,KAAK,QAAQ,IAAI,IAAI,CAAC,OAAO,GAAG,CAAC,EAAE;UACxD,MAAM,OAAO,GAAG,UAAU,CAAC;cACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;cACnB,OAAO,CAAC,KAAK,CAAC,CAAC;cACf,YAAY,CAAC,OAAO,CAAC,CAAC;WACvB,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;OAClB;WAAM;UACL,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;UACnB,OAAO,CAAC,KAAK,CAAC,CAAC;OAChB;EACF,CAAC;EAED,SAAS,MAAM,CAAkB,CAAM,EAAE,MAA6B;MACrE,IAAI,OAAO,IAAI,CAAC,OAAO,KAAK,QAAQ,EAAE;UACpC,MAAM,OAAO,GAAG,UAAU,CAAC;cACzB,MAAM,CAAC,CAAC,CAAC,CAAC;cACV,YAAY,CAAC,OAAO,CAAC,CAAC;WACvB,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;OAClB;WAAM;UACL,MAAM,CAAC,CAAC,CAAC,CAAC;OACX;EACF,CAAC;AASD,QAAa,SAAS;MAYrB,YAAY,OAAyB;UACnC,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;UAC7B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,IAAI,CAAC,CAAC;UACpC,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;UAC3B,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;UAC3B,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;UACxB,IAAI,CAAC,YAAY,CAAC,GAAG,KAAK,CAAC;UAC3B,IAAI,CAAC,WAAW,CAAC,GAAG,KAAK,CAAC;UAC1B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;UAClC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;UAChC,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;OACvB;MAED,OAAO,CAAC,KAAU;UAChB,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM;cACjC,IAAI;kBACF,MAAM,OAAO,GAAG,CAAC,OAAO,IAAI,CAAC,MAAM,KAAK,UAAU;wBAC9C,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;wBAClB,IAAI,CAAC,MAAM,CAAC;kBAChB,IAAI,OAAO,IAAI,OAAO,OAAO,CAAC,IAAI,KAAK,UAAU,IAAI,OAAO,OAAO,CAAC,KAAK,KAAK,UAAU,EAAE;sBACxF,OAAO,OAAO;2BACX,IAAI,CAAC,CAAC,MAAW,KAAK,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;2BACpD,KAAK,CAAC,CAAC,CAAM,KAAK,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC;mBAC9C;uBAAM;sBACL,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;mBAChC;eACF;cAAC,OAAO,CAAC,EAAE;kBACV,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;eACxB;WACF,CAAC,CAAC;OACJ;GACD;EAEF,SAAS,UAAU,CAAC,IAAgB;MAClC,IAAI,MAAM,GAAG,EAAE,CAAC;MAChB,IAAI,OAAO,GAAG,IAAI,CAAC;MACnB,OAAO,OAAO,EAAE;UACd,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;UAC3B,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC;OACxB;MACD,OAAO,MAAM,CAAC;EAChB,CAAC;AAAA,EAED,SAAS,aAAa,CAAc,OAA8B,EAAE,MAA6B;MAC/F,OAAO,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,OAAO,EAAE;UACrD,IAAI,CAAC,MAAM,EAAE,CAAC;UACd,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;UAC3B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC;UAC5B,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;UAC7B,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC;eAC3B,IAAI,CAAC,MAAM;cACV,IAAI,EAAE,IAAI,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO;kBAAE,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;;kBACzE,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;WACpC,EAAE,CAAC;cACF,IAAI,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC;cACzB,MAAM,CAAC,CAAC,CAAC,CAAC;WACX,CAAC,CAAC;OACN;EACH,CAAC;AAAA,QAUqB,KAAK;MAazB,YAAY,OAAqB;UAC/B,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;UAC7B,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,IAAI,QAAQ,CAAC;UACnD,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,IAAI,EAAE,CAAC;UACnC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;UAChB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,IAAI,CAAC,CAAC;UACpC,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;UACzB,IAAI,CAAC,SAAS,CAAC,GAAG,KAAK,CAAC;UACxB,IAAI,CAAC,WAAW,CAAC,GAAG,KAAK,CAAC;UAC1B,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;UACtB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;UAChB,IAAI,CAAC,UAAU,GAAG,CAAC,OAAO,CAAC,UAAU,IAAI,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;OACjE;MAED,MAAM,CAAC,GAAG,IAAW;UACnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;cACpC,IAAI,CAAC,MAAM,EAAE,CAAC;cACd,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;kBACd,IAAI,CAAC,IAAI,GAAG,IAAI,SAAS,CAAC;sBACxB,KAAK,EAAE,CAAC;sBACR,MAAM,EAAE,SAAS;sBACjB,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC;sBACd,OAAO,EAAE,IAAI,CAAC,OAAO;mBACtB,CAAC,CAAC;eACJ;mBAAM;kBACL,IAAI,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;kBACxB,OAAO,OAAO,IAAI,OAAO,CAAC,IAAI,EAAE;sBAC9B,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC;mBACxB;kBACD,OAAO,CAAC,IAAI,GAAG,IAAI,SAAS,CAAC;sBAC3B,KAAK,EAAE,CAAC;sBACR,MAAM,EAAE,SAAS;sBACjB,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC;sBACd,OAAO,EAAE,IAAI,CAAC,OAAO;mBACtB,CAAC,CAAC;eACJ;WACF;UACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;UACzB,OAAO,IAAI,CAAC;OACb;MAED,OAAO,CAAC,OAA+B,EAAE,MAA8B;UACrE,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,EAAE;cACzD,OAAO,IAAI,CAAC;WACb;UACD,IAAI,OAAO,IAAI,MAAM,EAAE;cACrB,aAAa,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;WAC3C;eAAM;cACL,OAAO,IAAI,OAAO,CAAC,CAAC,EAAE,EAAE,EAAE;kBACxB,aAAa,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;eAClC,CAAC,CAAC;WACJ;OACF;GACD;;WCpLsB,GAAG,CACzB,SAA4B,EAC5B,MAAa,EACb,WAAgB,EAChB,EAA6B;MAE7B,MAAM,QAAQ,GAAG,CAAC,OAAO,WAAW,KAAK,UAAU,IAAI,WAAW,GAAG,EAAE,CAAC;MACxE,MAAM,IAAI,GAAG,CAAC,OAAO,WAAW,KAAK,QAAQ,IAAI,WAAW,GAAG,SAAS,CAAC;MACzE,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC;UACtB,MAAM,EAAE,SAAS;UACjB,WAAW,EAAE,IAAI;OAClB,CAAC,CAAC;MACH,MAAM,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC,OAAO,EAAuB,CAAA;MAChE,OAAO,CAAC;WACL,IAAI,CAAC,MAAM,IAAI,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;WACtC,KAAK,CAAC,QAAQ,CAAC,CAAC;EACrB,CAAC;;WCXuB,QAAQ,CAC9B,GAAyB,EACzB,IAAS,EACT,WAAgB,EAChB,EAA6B;MAE7B,MAAM,QAAQ,GAAG,CAAC,OAAO,WAAW,KAAK,UAAU,IAAI,WAAW,GAAG,EAAE,CAAC;MACxE,MAAM,IAAI,GAAG,CAAC,OAAO,WAAW,KAAK,QAAQ,IAAI,WAAW,GAAG,SAAS,CAAC;MACzE,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC;UACtB,MAAM,EAAE,CAAC,CAAoB;cAC3B,MAAM,EAAE,SAAS,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;cAC7B,IAAI,OAAO,SAAS,KAAK,UAAU,EAAE;kBACnC,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;sBACvB,MAAM,MAAM,GAAG,IAAa,CAAC;sBAC7B,OAAO,OAAO,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,GAAG,MAAM,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;mBACjD;kBACD,OAAO,OAAO,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;eAC5C;cACD,OAAO,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;WACzB;UACD,WAAW,EAAE,IAAI;UACjB,UAAU,EAAE,CAAC,IAAgB;cAC3B,MAAM,MAAM,GAAyB,EAAE,CAAC;cACxC,IAAI,OAAO,GAAG,IAAI,CAAC;cACnB,OAAO,OAAO,EAAE;kBACd,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,GAAG,OAAO,CAAC,KAAc,CAAC;kBAC5C,MAAM,CAAC,GAAa,CAAC,GAAG,KAAK,CAAC;kBAC9B,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC;eACxB;cACD,OAAO,MAAM,CAAC;WACf;OACF,CAAC,CAAC;MACH,MAAM,CAAC,GAAG,KAAK;WACZ,MAAM,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,KAAK,EAAE,SAAS,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;WACtE,OAAO,EAAmC,CAAC;MAE9C,OAAO,CAAC;WACL,IAAI,CAAC,MAAM,IAAI,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;WACtC,KAAK,CAAC,QAAQ,CAAC,CAAC;EACrB,CAAC;AAED,WAAgB,uBAAuB,CAAI,GAA2B;MACpE,OAAO,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,MAA8B,EAAE,GAAW;UACzE,IAAI,GAAG,CAAC,GAAG,CAAC,IAAI,OAAO,GAAG,CAAC,GAAG,CAAC,KAAK,QAAQ,EAAE;cAC5C,MAAM,CAAC,GAAG,CAAC,GAAG,OACZ,QAAQ,CAAC,QAAQ,CAAI,uBAAuB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CACxD,CAAC;WACH;eAAM;cACL,MAAM,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;WACxB;UACD,OAAO,MAAM,CAAC;OACf,EAAE,EAAE,CAAC,CAAC;EACT,CAAC;;WC3CuB,MAAM,CAC5B,GAAU,EACV,WAAgB,EAChB,EAA6B;MAE7B,MAAM,QAAQ,GAAG,CAAC,OAAO,WAAW,KAAK,UAAU,IAAI,WAAW,GAAG,EAAE,CAAC;MACxE,MAAM,IAAI,GAAG,CAAC,OAAO,WAAW,KAAK,QAAQ,IAAI,WAAW,GAAG,SAAS,CAAC;MACzE,MAAM,SAAS,GAAmB,EAAE,CAAC;MACrC,MAAM,QAAQ,GAAe,EAAE,CAAC;MAChC,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC;UACtB,MAAM,CAAC,SAAc;cACnB,IAAI,OAAO,SAAS,KAAK,UAAU,EAAE;kBACnC,IAAI;sBACF,MAAM,OAAO,GAAG,SAAS,EAAE,CAAC;sBAC5B,IAAI,OAAO,IAAI,OAAO,OAAO,CAAC,IAAI,KAAK,UAAU,IAAI,OAAO,OAAO,CAAC,KAAK,KAAK,UAAU,EAAE;0BACxF,OAAO,OAAO;+BACX,IAAI,CAAC,CAAC,MAAW;8BAChB,SAAS,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,WAAW,EAAE,CAAC,CAAC;2BACxD,EAAE,CAAC,GAAQ;8BACV,QAAQ,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC,CAAC;2BACnD,CAAC,CAAC;uBACN;2BAAM;0BACL,SAAS,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,CAAC,CAAC;uBACzD;mBACF;kBAAC,OAAM,CAAC,EAAE;sBACT,QAAQ,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC,CAAC;mBACjD;eACF;mBAAM;kBACL,SAAS,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,WAAW,EAAE,CAAC,CAAC;eAC3D;cACD,OAAO,IAAI,CAAC;WACb;UACD,UAAU,CAAC,IAAgB;cACzB,OAAO,IAAI,CAAC;WACb;UACD,WAAW,EAAE,IAAI;OAClB,CAAC,CAAC;MAEH,MAAM,CAAC,GAAG,KAAK;WACZ,MAAM,CAAC,GAAG,GAAG,CAAC;WACd,OAAO,EAAkB,CAAC;MAE7B,OAAO,CAAC;WACL,IAAI,CAAC,MAAM,QAAQ,CAAC,IAAI,EAAE,EAAE,SAAS,EAAE,QAAQ,EAAkB,CAAC,CAAC;WACnE,KAAK,CAAC,QAAQ,CAAC,CAAC;EACrB,CAAC;;WC7DuB,QAAQ,CAC9B,SAAoB;MAEpB,OAAO,SAAS,OAAO,CAAE,KAAU,EAAE,EAA4B;UAC/D,IAAI,OAAO,CAAC;UACZ,IAAI;cACF,OAAO,GAAG,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;WACjC;UACD,OAAO,CAAC,EAAE;cACR,EAAE,CAAC,CAAC,CAAC,CAAC;WACP;UACD,IAAI,CAAC,OAAO,EAAE;cACZ,EAAE,CAAC,IAAI,KAAK,CAAC,mEAAmE,CAAC,CAAC,CAAC;WACpF;UACD,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,OAAO,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;UAC/D,IAAI,CAAC,IAAI,EAAE;cACT,IAAI,KAAK,IAAI,OAAO,KAAK,CAAC,IAAI,KAAK,UAAU,IAAI,OAAO,KAAK,CAAC,KAAK,KAAK,UAAU,EAAE;kBAClF,KAAK,CAAC,IAAI,CAAC,CAAC,IAAS,KAAK,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;eAClD;mBAAM;kBACL,IAAI,OAAO,GAAG,UAAU,CAAC;sBACvB,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;sBACnB,YAAY,CAAC,OAAO,CAAC,CAAC;mBACvB,EAAE,CAAC,CAAC,CAAC;eACP;WACF;eAAM;cACL,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;WACjB;OACF,CAAC;EACJ,CAAC;;WC5BuB,qBAAqB,CAC3C,EAAa,EACb,QAA6B;MAE7B,IAAI,OAAU,CAAC;MACf,OAAO,UAAU,QAAQ;UACvB,GAAG;cACD,MAAM,OAAO,GAAG,EAAE,EAAE,CAAC;cACrB,IAAI,OAAO,IAAI,OAAO,OAAO,CAAC,IAAI,KAAK,UAAU,IAAI,OAAO,OAAO,CAAC,KAAK,KAAK,UAAU,EAAE;kBACxF,MAAM,OAAO;uBACV,IAAI,CAAC,CAAC,MAAS;sBACd,OAAO,GAAG,MAAM,CAAC;sBACjB,OAAO,OAAO,CAAC;mBAChB,EAAE,CAAC,CAAQ,KAAK,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;eACvC;mBACI;kBACH,OAAO,GAAG,OAAY,CAAC;kBACvB,MAAM,OAAO,CAAC;eACf;WACF,QACM,QAAQ,CAAC,OAAO,CAAC,EAAE;OAC3B,CAAC;EACJ,CAAC;;ECtBD,SAAS,OAAO,CAAC,IAAI,GAAG,CAAC;MACvB,OAAO,IAAI,OAAO,CAAC,OAAO;UACxB,IAAI,QAAQ,GAAG,UAAU,CAAC;cACxB,YAAY,CAAC,QAAQ,CAAC,CAAC;cACvB,OAAO,EAAE,CAAC;WACX,EAAE,IAAI,CAAC,CAAC;OACV,CAAC,CAAC;EACL,CAAC;AAAA,WAEuB,kBAAkB,CACxC,EAAa,EACb,OAA4C;MAE5C,IAAI,OAAqE,CAAC;MAC1E,IAAI,OAAO,GAAG,IAAI,CAAC;MACnB,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,EAAE,EAAE,GAAG,OAAO,CAAC;MACrC,OAAO,UAAU,KAAK;UACpB,GAAG;cACD,KAAK,EAAE,CAAC;cACR,IAAI,OAAO,GAAG,CAAC,OAAO,IAAI,OAAO,EAAE,KAAK,QAAQ,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,EAAE,GAAG,CAAC;kBACtE,OAAO,OAAO,CAAC,EAAE,CAAC;uBACf,IAAI,CAAC,EAAE,CAAC;uBACR,KAAK,CAAC,CAAC,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;eAClC,GAAG,CAAC;cACL,OAAO,GAAG,KAAK,CAAC;cAChB,IAAI,OAAO,IAAI,OAAO,OAAO,CAAC,IAAI,KAAK,UAAU,IAAI,OAAO,OAAO,CAAC,KAAK,KAAK,UAAU,EAAE;kBACxF,MAAM,OAAO;uBACV,IAAI,CAAC,CAAC,MAAS;sBACd,OAAO,GAAG,EAAE,YAAY,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC;sBAC1D,OAAO,OAAO,CAAC;mBAChB,EAAE,CAAC,CAAQ;sBACV,OAAO,GAAG,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;sBACjD,OAAO,OAAO,CAAC;mBAChB,CAAC,CAAC;eACN;mBACI;kBACH,OAAO,GAAG,EAAE,YAAY,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC;kBAC3D,MAAM,OAAO,CAAC;eACf;WACF,QAEC,KAAK;kBAEH,OAAO;qBACJ,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,EAAE,cAAc,CAAC,CACvD,EACD;UACF,OAAO,OAAO,CAAC;OAChB,CAAC;EACJ,CAAC;;ECjDD,SAAS,SAAS,CAAC,GAAU,EAAE,KAAU;MACvC,OAAO,GAAG,CAAC,GAAG,CAAC,SAAS;UACtB,MAAM,KAAK,GAAG,CAAC,OAAO,KAAK,KAAK,QAAQ;iBACnC,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC;oBACpB,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,CAAC;oBACxB,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,CAAC;gBAC1B,KAAK,CAAC;UACV,IAAI,OAAO,SAAS,KAAK,UAAU;cAAE,OAAO,SAAS,CAAC,KAAK,CAAC,CAAC;;cACxD,OAAO,SAAS,CAAC;OACvB,CAAC,CAAC;EACL,CAAC;AAAA,WAEuB,mBAAmB,CACzC,GAAyC;MAEzC,OAAO,UAAU,MAAM;UACrB,IAAI,OAAO,CAAC;UACZ,IAAI,KAAU,CAAC;UACf,OAAO,GAAG,CAAC,MAAM,EAAE;cACjB,OAAO,GAAG,GAAG,CAAC,KAAK,EAAE,CAAC;cACtB,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;kBAC1B,MAAM,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;uBACpD,IAAI,CAAC,MAAM,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC;uBACtE,KAAK,CAAC,CAAC,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;kBACjC,KAAK,GAAG,MAAM,QAAQ,CAAC;eACxB;mBACI,IAAI,OAAO,KAAK,SAAS;kBAAE,KAAK,GAAG,MAAM,OAAO,CAAC,KAAK,CAAC,CAAC;WAC9D;UACD,OAAO,KAAa,CAAC;OACtB,CAAC;EACJ,CAAC;;ACrBD,kBAAe;MACb,UAAU;MACV,GAAG;MACH,QAAQ;MACR,uBAAuB;MACvB,MAAM;MACN,QAAQ;gBACRA,qBAAQ;aACRC,kBAAK;cACLC,mBAAM;GACP,CAAA;;ECED,SAAS,+BAA+B,CAAC,CAAM;MAC7C,OAAO,CAAC,IAAI,OAAO,CAAC,KAAK,QAAQ,CAAC;EACpC,CAAC;EAMD,SAAS,WAAW,CAAC,OAA0B,EAAE,OAAY;MAC3D,OAAO;UACL,OAAO;UACP,OAAO,EAAE,CAAC,OAAO,OAAO,KAAK,UAAU,IAAI,OAAO,GAAG,SAAS;OAC/D,CAAC;EACJ,CAAC;AAAA,QAEoB,QAAkB,SAAQ,OAAU;MAGvD,YAAY,QAGH;UACP,KAAK,CAAC,QAAQ,CAAC,CAAC;OACjB;MAED,IAAI,CACF,WAAoD,EACpD,UAAmF;UAEnF,OAAO,KAAK,CAAC,IAAI,CAAC,WAAW,EAAE,UAAU,CAAuB,CAAA;OACjE;MAED,GAAG,CACD,WAAoD,EACpD,UAAmF;UAEnF,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG,WAAW,CAAC,UAAU,IAAI;cACrD,IAAI;kBACF,OAAO,CAAC,OAAO,WAAW,KAAK,UAAU;wBACrC,WAAW,CAAC,IAAI,CAAC;wBACjB,QAAQ,CAAC,MAAM,CAAC,IAAI,SAAS,CAAC,uDAAuD,CAAC,CAAC,CAAC;eAC7F;cACD,OAAO,CAAC,EAAE;kBACR,OAAO,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;eAC3B;WACF,EAAE,UAAU,CAAC,CAAC;UACf,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAuB,CAAC;OAC1D;MAED,MAAM,CACJ,WAAwD,EACxD,UAAmF;UAEnF,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG,WAAW,CAAC,UAAU,IAAI;cACrD,IAAI,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,UAAU,EAAE;kBAC/C,OAAO,QAAQ,CAAC,MAAM,CAAC,IAAI,SAAS,CAAC,4CAA4C,CAAC,CAAC,CAAC;eACrF;cACD,IAAI,OAAO,WAAW,KAAK,UAAU,EAAE;kBACrC,OAAO,QAAQ,CAAC,MAAM,CAAC,IAAI,SAAS,CAAC,0DAA0D,CAAC,CAAC,CAAC;eACnG;cACD,OAAO,WAAW,CAAC,GAAG,IAAI,CAAC,CAAC;WAC7B,EAAE,UAAU,CAAC,CAAC;UACf,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAuB,CAAC;OAC1D;MAED,GAAG,CACD,WAAoD,EACpD,UAA4F,EAC5F,WAAoB;UAEpB,IAAI,OAAO,UAAU,KAAK,QAAQ,EAAE;cAClC,WAAW,GAAG,UAAU,CAAC;cACzB,UAAU,GAAG,SAAS,CAAC;WACxB;UACD,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG,WAAW,CAAC,UAAU,IAAI;cACrD,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;kBACxB,OAAO,QAAQ,CAAC,MAAM,CAAC,IAAI,SAAS,CAAC,yCAAyC,CAAC,CAAC,CAAC;eAClF;cACD,IAAI,OAAO,WAAW,KAAK,UAAU,EAAE;kBACrC,OAAO,QAAQ,CAAC,MAAM,CAAC,IAAI,SAAS,CAAC,uDAAuD,CAAC,CAAC,CAAC;eAChG;cACD,OAAO,QAAQ,CAAC,GAAG,CAAW,IAAI,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC;WAC/D,EAAE,UAAU,CAAC,CAAC;UACf,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAyB,CAAC;OAC5D;MAED,IAAI,CACF,WAAoD,EACpD,UAA4F,EAC5F,WAAoB;UAEpB,IAAI,OAAO,UAAU,KAAK,QAAQ,EAAE;cAClC,WAAW,GAAG,UAAU,CAAC;cACzB,UAAU,GAAG,SAAS,CAAC;WACxB;UACD,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG,WAAW,CAAC,UAAU,IAAI;cACrD,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;kBACxB,OAAO,QAAQ,CAAC,MAAM,CAAC,IAAI,SAAS,CAAC,0CAA0C,CAAC,CAAC,CAAC;eACnF;cACD,IAAI,OAAO,WAAW,KAAK,UAAU,EAAE;kBACrC,OAAO,QAAQ,CAAC,MAAM,CAAC,IAAI,SAAS,CAAC,wDAAwD,CAAC,CAAC,CAAC;eACjG;cACD,OAAO,QAAQ,CAAC,IAAI,CAAW,IAAI,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC;WAChE,EAAE,UAAU,CAAC,CAAC;UACf,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAyB,CAAC;OAC5D;MAED,MAAM,CACJ,WAAoD,EACpD,UAAmF;UAEnF,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG,WAAW,CAAC,UAAU,IAAI;cACrD,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;kBACxB,OAAO,QAAQ,CAAC,MAAM,CAAC,IAAI,SAAS,CAAC,4CAA4C,CAAC,CAAC,CAAC;eACrF;cACD,IAAI,OAAO,WAAW,KAAK,UAAU,EAAE;kBACrC,OAAO,QAAQ,CAAC,MAAM,CAAC,IAAI,SAAS,CAAC,0DAA0D,CAAC,CAAC,CAAC;eACnG;cACD,MAAM,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,MAAM,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;cACvD,OAAO,QAAQ,CAAC,MAAM,CAAW,UAAU,CAAC,CAAC;WAC9C,EAAE,UAAU,CAAC,CAAC;UACf,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAqC,CAAC;OACxE;MAED,KAAK,CACH,WAAmD,EACnD,UAAkG,EAClG,OAAsB;UAEtB,IAAI,UAAU,IAAI,OAAO,UAAU,KAAK,QAAQ,EAAE;cAChD,OAAO,GAAG,UAAU,CAAC;cACrB,UAAU,GAAG,SAAS,CAAC;WACxB;UACD,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG,WAAW,CAAC,UAAU,IAAI;cACrD,IAAI,OAAO,WAAW,KAAK,UAAU;kBAAE,OAAO,QAAQ,CAAC,MAAM,CAAC,IAAI,SAAS,CAAC,yDAAyD,CAAC,CAAC,CAAC;cACxI,OAAO,QAAQ,CAAC,KAAK,CAAW;kBAC9B,OAAO,WAAW,CAAC,IAAI,CAAC,CAAC;eAC1B,EAAE,OAAO,CAAC,CAAC;WACb,EAAE,UAAU,CAAC,CAAC;UACf,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAuB,CAAC;OAC1D;MAED,OAAO,CAAe,WAA4C;UAChE,MAAM,QAAQ,GAAG,MAAM,CAAC,OAAO,WAAW,KAAK,UAAU;gBACrD,WAAW,EAAE;gBACb,QAAQ,CAAC,MAAM,CAAC,IAAI,SAAS,CAAC,iDAAiD,CAAC,CAAC,CAAC;UACtF,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAuB,CAAC;OAC5D;MAED,OAAO,SAAS,CACd,EAA4B,EAC5B,KAAW;UAEX,MAAM,WAAW,GAAG,UAAuB,GAAG,IAAW;cACvD,OAAO,IAAI,QAAQ,CAAC,CAAC,OAAO,EAAE,MAAM;kBAClC,IAAI,CAAC,IAAI,CAAC,UAAS,GAAQ,EAAE,IAAS;sBACpC,IAAI,GAAG,EAAE;0BACP,MAAM,CAAC,GAAG,CAAC,CAAC;uBACb;2BAAM;0BACL,OAAO,CAAC,IAAI,CAAC,CAAC;uBACf;mBACF,CAAC,CAAC;kBACH,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;eACtB,CAAC,CAAC;WACJ,CAAA;UACD,IAAI,KAAK,EAAE;cACT,OAAO,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;WAChC;UACD,OAAO,WAAW,CAAC;OACpB;MAED,OAAO,YAAY,CACjB,GAA4B,EAC5B,KAAW,EACX,OAA6B;UAE7B,MAAM,kBAAkB,GAAG,MAAM,CAAC,MAAM,CAAC;cACvC,QAAQ,EAAE,IAAI;cACd,SAAS,EAAE,KAAK;WACjB,EAAE,OAAO,CAAC,CAAC;UACZ,IAAI,KAAK,GAA4B,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;UACxD,IAAI,CAAC,kBAAkB,CAAC,QAAQ,EAAE;cAChC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,CAA4B,CAAC;WAC9D;eAAM;cACL,KAAK,GAAG,SAAS,CAAC,UAAU,CAAC,GAAG,CAA4B,CAAC;WAC9D;UAED,MAAM,WAAW,GAA6B,EAAE,CAAC;UAEjD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,GAAW;cACrC,IAAI,OAAO,KAAK,CAAC,GAAG,CAAC,KAAK,UAAU,EAAE;kBACpC,WAAW,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,KAAK;wBAC/B,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC;wBACjC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;eAChC;mBAAM,IAAI,kBAAkB,CAAC,SAAS,EAAE;kBACvC,MAAM,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;kBACrB,IAAI,+BAA+B,CAAC,CAAC,CAAC,EAAE;sBACtC,WAAW,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,YAAY,CAClC,CAAC,EACD,KAAK,EACL,kBAAkB,CACnB,CAAC;mBACH;eACF;WACF,CAAC,CAAC;UAEH,OAAO,WAAW,CAAC;OACpB;MAED,OAAO,MAAM,CAAU,GAAyC;UAC9D,OAAO,QAAQ,CAAC,OAAO,CAAI,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;OACzD;MAED,OAAO,IAAI,CAAU,GAAmC;UACtD,OAAO,UAAS,GAAG,IAAW;cAC5B,MAAM,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,GAAG,CAAmC,CAAC;cAC5E,MAAM,KAAK,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;cAC5B,UAAU,CAAC,CAAC,CAAC,GAAG;kBACd,OAAO,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC;eACvB,CAAA;cACD,OAAO,QAAQ,CAAC,MAAM,CAAI,UAAU,CAAC,CAAC;WACvC,CAAA;OACF;MAED,OAAO,OAAO,CAAU,GAAmC;UACzD,OAAO,QAAQ,CAAC,IAAI,CAAI,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;OACxC;MAED,OAAO,GAAG,CAAU,KAAY,EAAE,WAAgB,EAAE,EAAsB;UACxE,MAAM,MAAM,GAAG,CAAC,OAAO,WAAW,KAAK,UAAU;gBAC7C,WAAW;gBACX,EAAE,CAAC;UACP,IAAI,OAAO,WAAW,KAAK,QAAQ,EAAE;cACnC,WAAW,GAAG,CAAC,CAAC;WACjB;UACD,OAAO,QAAQ,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,CAAW,MAAM,EAAE,KAAK,EAAE,WAAW,CAAC,CAAC;OAChF;MAED,OAAO,IAAI,CAAU,KAAU,EAAE,WAAgB,EAAE,EAAsB;UACvE,OAAO,QAAQ;eACZ,GAAG,CAAI,KAAK,EAAE,WAAW,EAAE,EAAE,CAAC;eAC9B,IAAI,CAAC,MAAM,KAAK,CAAuB,CAAC;OAC5C;MAED,OAAO,QAAQ,CAAU,GAA2B,EAAE,IAAU,EAAE,UAA2B,EAAE;UAC7F,MAAM,EAAE,SAAS,GAAG,KAAK,EAAE,WAAW,EAAE,GAAG,OAAO,CAAC;UACnD,IAAI,SAAS,EAAE;cACb,GAAG,GAAG,SAAS,CAAC,uBAAuB,CAAI,GAAG,CAAC,CAAC;WACjD;UACD,OAAO,QAAQ,CAAC,SAAS,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAI,GAAG,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;OAC1E;MAED,OAAO,MAAM,CAAU,GAAU,EAAE,WAAoB;UACrD,OAAO,QAAQ,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,CAAkB,GAAG,EAAE,WAAW,CAAC,CAAC;OAChF;MAED,OAAO,OAAO,CAAU,SAAmC,EAAE,OAAY;UACvE,MAAM,QAAQ,GAAG,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;UACxD,OAAO,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAI,OAAO,CAAC,CAAC;OACjD;MAED,OAAO,QAAQ,CAAU,EAAwB,EAAE,QAA6B;UAC9E,OAAO,QAAQ,CAAC,OAAO,CAAI,SAAS,CAAC,QAAQ,CAAI,EAAE,EAAE,QAAQ,CAAC,EAAE,IAAI,CAAC,CAAC;OACvE;MAED,OAAO,KAAK,CAAC,OAAe;UAC1B,OAAO,IAAI,QAAQ,CAAC,CAAC,OAAO;cAC1B,UAAU,CAAC;kBACT,OAAO,EAAE,CAAC;eACX,EAAE,OAAO,CAAC,CAAC;WACb,CAAC,CAAC;OACJ;MAED,OAAO,KAAK,CAAU,EAAwB,EAAE,OAAsB;UACpE,MAAM,EAAE,KAAK,GAAG,CAAC,EAAE,OAAO,GAAG,CAAC,EAAE,GAAG,OAAO,IAAI,EAAE,CAAC;UACjD,OAAO,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAI,EAAE,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,EAAE,IAAI,CAAC;eACtE,IAAI,CAAC,MAAM;cACV,MAAM,EAAE,YAAY,EAAE,CAAC,EAAE,KAAK,EAAE,GAAG,MAAsE,CAAC;cAC1G,IAAI,YAAY,EAAE;kBAChB,OAAO,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;eAC3B;cACD,OAAO,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;WAChC,CAAC,CAAC;OACN;GACF;;;;"}